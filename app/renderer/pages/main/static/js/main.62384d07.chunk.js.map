{"version":3,"sources":["../external \"electron\"","../external \"crypto\"","AppContext.js","components/TypeMenu.jsx","components/ContentEditor.jsx","components/AddCard.jsx","components/EditCard.jsx","components/TypeCard.jsx","localStorageUtil.js","components/SearchMenu.jsx","components/TagMenu.jsx","components/UtilMenu.jsx","components/UtilManage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","createContext","props","useContext","AppContext","selectType","setSelectType","showMenus","mode","selectedKeys","style","height","borderRight","onClick","key","textAlign","marginTop","marginBottom","color","map","menu","Item","lineHeight","total","className","border","noBlock","useState","modalShow","setModalShow","addCard","types","tags","newType","setNewType","newTag","setNewTag","tempTypes","setTempTypes","tempTags","setTempTags","Form","useForm","form","useEffect","resetFields","addTempType","type","trim","inTag","some","item","addTempTag","tag","icon","PlusOutlined","title","visible","onOk","validateFields","then","newCard","getFieldsValue","content","toHTML","catch","onCancel","forceRender","width","initialValues","BraftEditor","createEditorState","size","label","labelCol","span","wrapperCol","name","rules","required","message","placeholder","dropdownRender","margin","display","flexWrap","padding","flex","value","onChange","e","target","onKeyDown","stopPropagation","onPressEnter","cursor","paddingLeft","Option","ContentEditor","contentStyle","fontSize","oldCard","editCard","EditFilled","marginRight","oldType","oldTags","showIndex","setShowIndex","showCard","setShowCard","contentShow","setContentShow","activeKey","selectTag","searchSelectId","showCards","removeCard","changeMenus","index","length","Math","max","changeIndex","isNext","isSide","targetIndex","cardLength","ref","useRef","current","keydown","keyCode","document","addEventListener","removeEventListener","EditCard","onConfirm","okText","cancelText","CloseCircleFilled","background","marginLeft","dangerouslySetInnerHTML","__html","justifyContent","FastBackwardFilled","CaretLeftFilled","fontWeight","CaretRightFilled","FastForwardFilled","AddCard","BlockOutlined","extra","ls","window","localStorage","get","result","getItem","JSON","parse","set","stringify","setItem","remove","removeItem","setSearchSelectId","setSearchText","Search","onSearch","enterButton","setSelectTag","UtilItem","url","openWebview","substring","backgroundColor","utils","util","colorOptions","saveUtils","AppstoreOutlined","newData","List","fields","add","maxHeight","overflowY","field","align","fieldKey","options","MinusCircleOutlined","block","Sider","Layout","Header","Footer","Content","App","collapsed","setCollapsed","cards","data","setData","setUtils","setActiveKey","searchText","dataResult","lsApi","utilResult","useMemo","targetCards","push","indexOf","id","menus","typeTotal","unshift","tagTotal","texts","split","text","contextValue","card","uuid","genV1","toString","typeInTag","removeIndex","splice","oldTag","tagInTag","removeCardIndex","removeTypeIndex","webviewInfo","ipcRenderer","send","Provider","collapsedWidth","overflow","TabPane","tab","TypeMenu","TagMenu","SearchMenu","UtilMenu","position","UnorderedListOutlined","UtilManage","TypeCard","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.62384d07.chunk.js","sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"crypto\");","import { createContext } from \"react\";\n\nexport default createContext({\n});\n","import React, { useContext } from \"react\";\nimport { Menu } from \"antd\";\nimport AppContext from \"../AppContext\";\n\nexport default (props) => {\n  const { selectType, setSelectType, showMenus } = useContext(AppContext);\n\n  return (\n    <Menu\n      mode=\"inline\"\n      selectedKeys={[selectType]}\n      style={{ height: \"100%\", borderRight: 0 }}\n      onClick={({ key }) => {\n        setSelectType(key);\n      }}\n    >\n      <div style={{ textAlign: \"center\", marginTop: \"20px\",marginBottom: \"20px\", color: \"#999999\" }}>\n        使用上、下键以快速切换\n      </div>\n      {showMenus.map((menu) => (\n        <Menu.Item\n          key={menu.key}\n          style={{ height: \"24px\", lineHeight: \"24px\" }}\n        >{`${menu.key} (${menu.total})`}</Menu.Item>\n      ))}\n    </Menu>\n  );\n};\n","import React from 'react'\n// 引入编辑器组件\nimport BraftEditor from 'braft-editor'\n// 引入编辑器样式\nimport 'braft-editor/dist/index.css'\n\nexport default (props) => {\n        return (\n            <div className=\"my-component\" style={{border:\"1px solid #333333\"}}>\n                <BraftEditor \n                    {...props}\n                    // onSave={this.submitContent}\n                />\n            </div>\n        )\n\n}","import React, { useEffect, useState, useContext } from \"react\";\nimport { Button, Modal, Form, Input, Select, Divider, Row, Col } from \"antd\";\nimport AppContext from \"../AppContext\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ContentEditor from \"./ContentEditor\";\nimport BraftEditor from \"braft-editor\";\n\nexport default ({ noBlock }) => {\n  const [modalShow, setModalShow] = useState(false);\n  const { addCard, types, tags } = useContext(AppContext);\n\n  const [newType, setNewType] = useState(\"\");\n  const [newTag, setNewTag] = useState(\"\");\n\n  const [tempTypes, setTempTypes] = useState([]);\n  const [tempTags, setTempTags] = useState([]);\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (modalShow) {\n      form.resetFields();\n      setTempTypes([...types]);\n      setTempTags([...tags]);\n    }\n  }, [modalShow]);\n\n  const onStateOk = () => {\n    form\n      .validateFields()\n      .then(() => {\n        const newCard = form.getFieldsValue();\n        newCard.content = newCard.content.toHTML();\n        addCard(newCard);\n        setModalShow(false);\n      })\n      .catch(() => {});\n  };\n\n  const addTempType = () => {\n    let type = (newType + \"\").trim();\n    if (type) {\n      let inTag = false;\n      tempTypes.some((item) => {\n        if (item === type) {\n          inTag = true;\n          return true;\n        }\n      });\n      if (!inTag) {\n        setTempTypes((tempTypes) => [...tempTypes, type]);\n      }\n      setNewType(\"\");\n    }\n  };\n\n  const addTempTag = () => {\n    let tag = (newTag + \"\").trim();\n    if (tag) {\n      let inTag = false;\n      tempTags.some((item) => {\n        if (item === tag) {\n          inTag = true;\n          return true;\n        }\n      });\n      if (!inTag) {\n        setTempTags((tempTags) => [...tempTags, tag]);\n      }\n      setNewTag(\"\");\n    }\n  };\n\n  return (\n    <>\n      <Button\n        icon={<PlusOutlined />}\n        type=\"primary\"\n        onClick={() => {\n          setModalShow(true);\n        }}\n      >\n        <b>新增卡片</b>\n      </Button>\n      <Modal\n        title={\"新增卡片\"}\n        visible={modalShow}\n        onOk={onStateOk}\n        onCancel={() => setModalShow(false)}\n        forceRender\n        style={{ width: \"100%\", height: \"100%\" }}\n      >\n        <Form\n          initialValues={{\n            content: BraftEditor.createEditorState(null),\n          }}\n          size=\"small\"\n          form={form}\n        >\n          <Form.Item\n            label=\"卡片标题\"\n            labelCol={{ span: 3 }}\n            wrapperCol={{ span: 21 }}\n            name=\"title\"\n            rules={[{ required: true, message: \"不可为空\" }]}\n          >\n            <Input placeholder=\"请输入卡片标题\" />\n          </Form.Item>\n          <Row>\n            <Col span={12}>\n              <Form.Item\n                label=\"卡片类型\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n                name=\"type\"\n                rules={[{ required: true, message: \"不可为空\" }]}\n              >\n                <Select\n                  placeholder=\"请选择或增加卡片类型\"\n                  dropdownRender={(menu) => (\n                    <div>\n                      {menu}\n                      <Divider style={{ margin: \"4px 0\" }} />\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexWrap: \"nowrap\",\n                          padding: \"8px\",\n                        }}\n                      >\n                        <Input\n                          style={{ flex: \"auto\", height: \"24px\" }}\n                          value={newType}\n                          onChange={(e) => {\n                            setNewType(e.target.value);\n                          }}\n                          onKeyDown={(e) => {\n                            e.stopPropagation();\n                          }}\n                          onPressEnter={(e) => {\n                            addTempType();\n                            e.stopPropagation();\n                          }}\n                        />\n                        <a\n                          style={{\n                            flex: \"none\",\n                            display: \"block\",\n                            cursor: \"pointer\",\n                            paddingLeft: \"8px\",\n                          }}\n                          onClick={() => {\n                            addTempType();\n                          }}\n                        >\n                          <PlusOutlined /> 新增项\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                >\n                  {tempTypes.map((type) => (\n                    <Select.Option key={type} value={type}>\n                      {type}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"卡片标签\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n                name=\"tags\"\n              >\n                <Select\n                  mode=\"multiple\"\n                  placeholder=\"请选择或增加多个卡片标签\"\n                  dropdownRender={(menu) => (\n                    <div>\n                      {menu}\n                      <Divider style={{ margin: \"4px 0\" }} />\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexWrap: \"nowrap\",\n                          padding: 8,\n                        }}\n                      >\n                        <Input\n                          style={{ flex: \"auto\", height: \"24px\" }}\n                          value={newTag}\n                          onChange={(e) => {\n                            setNewTag(e.target.value);\n                          }}\n                          onKeyDown={(e) => {\n                            e.stopPropagation();\n                          }}\n                          onPressEnter={(e) => {\n                            addTempTag();\n                            e.stopPropagation();\n                          }}\n                        />\n                        <a\n                          style={{\n                            flex: \"none\",\n                            paddingLeft: \"8px\",\n                            display: \"block\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => {\n                            addTempTag();\n                          }}\n                        >\n                          <PlusOutlined /> 新增项\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                >\n                  {tempTags.map((tag) => (\n                    <Select.Option key={tag} value={tag}>\n                      {tag}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item wrapperCol={{ span: 24 }} name=\"content\">\n            <ContentEditor\n              placeholder=\"请输入卡片内容\"\n              contentStyle={{ height: \"200px\", fontSize: \"14px\" }}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Button, Modal, Form, Input, Select, Divider, Row, Col } from \"antd\";\nimport AppContext from \"../AppContext\";\nimport { EditFilled, PlusOutlined } from \"@ant-design/icons\";\nimport ContentEditor from \"./ContentEditor\";\nimport BraftEditor from \"braft-editor\";\n\nexport default ({ oldCard }) => {\n  const [modalShow, setModalShow] = useState(false);\n  const { editCard, types, tags } = useContext(AppContext);\n\n  const [newType, setNewType] = useState(\"\");\n  const [newTag, setNewTag] = useState(\"\");\n\n  const [tempTypes, setTempTypes] = useState([]);\n  const [tempTags, setTempTags] = useState([]);\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (modalShow) {\n      form.resetFields();\n      setTempTypes([...types]);\n      setTempTags([...tags]);\n    }\n  }, [modalShow]);\n\n  function onStateOk() {\n    form\n      .validateFields()\n      .then(() => {\n        const newCard = { ...oldCard, ...form.getFieldsValue() };\n        newCard.content = newCard.content.toHTML();\n        newCard.oldType = oldCard.type;\n        newCard.oldTags = oldCard.tags;\n        editCard(newCard);\n        setModalShow(false);\n      })\n      .catch(() => {});\n  }\n\n  const addTempType = () => {\n    let type = (newType + \"\").trim();\n    if (type) {\n      let inTag = false;\n      tempTypes.some((item) => {\n        if (item === type) {\n          inTag = true;\n          return true;\n        }\n      });\n      if (!inTag) {\n        setTempTypes((tempTypes) => [...tempTypes, type]);\n      }\n      setNewType(\"\");\n    }\n  };\n\n  const addTempTag = () => {\n    let tag = (newTag + \"\").trim();\n    if (tag) {\n      let inTag = false;\n      tempTags.some((item) => {\n        if (item === tag) {\n          inTag = true;\n          return true;\n        }\n      });\n      if (!inTag) {\n        setTempTags((tempTags) => [...tempTags, tag]);\n      }\n      setNewTag(\"\");\n    }\n  };\n\n  return (\n    <>\n      <EditFilled\n        style={{ color: \"#1890ff\", marginRight: \"5px\" }}\n        onClick={() => {\n          setModalShow(true);\n        }}\n      />\n      <Modal\n        title={\"修改卡片\"}\n        visible={modalShow}\n        onOk={onStateOk}\n        onCancel={() => setModalShow(false)}\n        forceRender\n      >\n        <Form\n          initialValues={{\n            ...oldCard,\n            content: BraftEditor.createEditorState(oldCard.content),\n          }}\n          size=\"small\"\n          form={form}\n        >\n          <Form.Item\n            label=\"卡片标题\"\n            labelCol={{ span: 3 }}\n            wrapperCol={{ span: 21 }}\n            name=\"title\"\n            rules={[{ required: true, message: \"不可为空\" }]}\n          >\n            <Input placeholder=\"请输入卡片标题\" />\n          </Form.Item>\n          <Row>\n            <Col span={12}>\n              <Form.Item\n                label=\"卡片类型\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n                name=\"type\"\n                rules={[{ required: true, message: \"不可为空\" }]}\n              >\n                <Select\n                  placeholder=\"请选择或增加卡片类型\"\n                  dropdownRender={(menu) => (\n                    <div>\n                      {menu}\n                      <Divider style={{ margin: \"4px 0\" }} />\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexWrap: \"nowrap\",\n                          padding: \"8px\",\n                        }}\n                      >\n                        <Input\n                          style={{ flex: \"auto\", height: \"24px\" }}\n                          value={newType}\n                          onChange={(e) => {\n                            setNewType(e.target.value);\n                          }}\n                          onKeyDown={(e) => {\n                            e.stopPropagation();\n                          }}\n                          onPressEnter={(e) => {\n                            addTempType();\n                            e.stopPropagation();\n                          }}\n                        />\n                        <a\n                          style={{\n                            flex: \"none\",\n                            display: \"block\",\n                            cursor: \"pointer\",\n                            paddingLeft: \"8px\",\n                          }}\n                          onClick={() => {\n                            addTempType();\n                          }}\n                        >\n                          <PlusOutlined /> 新增项\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                >\n                  {tempTypes.map((type) => (\n                    <Select.Option key={type} value={type}>\n                      {type}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"卡片标签\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n                name=\"tags\"\n              >\n                <Select\n                  mode=\"multiple\"\n                  placeholder=\"请选择或增加多个卡片标签\"\n                  dropdownRender={(menu) => (\n                    <div>\n                      {menu}\n                      <Divider style={{ margin: \"4px 0\" }} />\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexWrap: \"nowrap\",\n                          padding: 8,\n                        }}\n                      >\n                        <Input\n                          style={{ flex: \"auto\", height: \"24px\" }}\n                          value={newTag}\n                          onChange={(e) => {\n                            setNewTag(e.target.value);\n                          }}\n                          onKeyDown={(e) => {\n                            e.stopPropagation();\n                          }}\n                          onPressEnter={(e) => {\n                            addTempTag();\n                            e.stopPropagation();\n                          }}\n                        />\n                        <a\n                          style={{\n                            flex: \"none\",\n                            paddingLeft: \"8px\",\n                            display: \"block\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => {\n                            addTempTag();\n                          }}\n                        >\n                          <PlusOutlined /> 新增项\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                >\n                  {tempTags.map((tag) => (\n                    <Select.Option key={tag} value={tag}>\n                      {tag}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item wrapperCol={{ span: 24 }} name=\"content\">\n            <ContentEditor\n              placeholder=\"请输入卡片内容\"\n              contentStyle={{ height: \"200px\", fontSize: \"14px\" }}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n","import { Button, Result, Popconfirm } from \"antd\";\nimport React, {\n  useState,\n  useContext,\n  useEffect,\n  useRef,\n  Fragment,\n} from \"react\";\nimport AppContext from \"../AppContext\";\nimport AddCard from \"./AddCard\";\nimport {\n  CloseCircleFilled,\n  BlockOutlined,\n  FastBackwardFilled,\n  FastForwardFilled,\n  CaretLeftFilled,\n  CaretRightFilled,\n} from \"@ant-design/icons\";\nimport EditCard from \"./EditCard\";\nimport \"braft-editor/dist/output.css\";\n\nexport default () => {\n  const [showIndex, setShowIndex] = useState(0);\n  const [showCard, setShowCard] = useState(null);\n  const [contentShow, setContentShow] = useState(true);\n  const {\n    activeKey,\n    selectType,\n    selectTag,\n    searchSelectId,\n    showCards,\n    removeCard,\n    changeMenus,\n  } = useContext(AppContext);\n\n  useEffect(() => {\n    if (selectType) {\n      setShowIndex(0);\n    }\n  }, [activeKey, selectType, selectTag, searchSelectId]);\n\n  useEffect(() => {\n    if (showCards) {\n      let index = showIndex;\n      if (showIndex >= showCards.length) {\n        index = Math.max(showCards.length - 1, 0);\n        setShowIndex(index);\n      }\n      setShowCard(showCards[index]);\n    } else {\n      setShowCard(null);\n    }\n    // setContentShow(false);\n  }, [showCards, showIndex]);\n\n  const changeIndex = (isNext, isSide) => {\n    setShowIndex((showIndex) => {\n      let targetIndex = showIndex;\n      let cardLength = showCards.length;\n      if (isSide) {\n        if (isNext) {\n          targetIndex = cardLength - 1;\n        } else {\n          targetIndex = 0;\n        }\n      } else {\n        if (isNext) {\n          targetIndex++;\n          if (targetIndex >= cardLength) {\n            targetIndex = 0;\n          }\n        } else {\n          targetIndex--;\n          if (targetIndex < 0) {\n            targetIndex = Math.max(cardLength - 1, 0);\n          }\n        }\n      }\n      return targetIndex;\n    });\n  };\n\n  const ref = useRef();\n  ref.current = { changeIndex, changeMenus };\n\n  useEffect(() => {\n    const keydown = (e) => {\n      switch (e.keyCode) {\n        case 37: //左\n          ref.current.changeIndex(false, false);\n          break;\n        case 38: //上\n          ref.current.changeMenus(false);\n          break;\n        case 39: //右\n          ref.current.changeIndex(true, false);\n          break;\n        case 40: //下\n          ref.current.changeMenus(true);\n          break;\n      }\n    };\n    document.addEventListener(\"keydown\", keydown);\n    return () => {\n      document.removeEventListener(\"keydown\", keydown);\n    };\n  }, []);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }} ref={ref}>\n      {showCard ? (\n        <div className=\"cardBox\">\n          <div className=\"typeCard\">\n            <div className=\"cardBtnBox\">\n              <EditCard oldCard={showCard} />\n              <Popconfirm\n                title=\"确认删除本卡片吗？\"\n                onConfirm={()=>{removeCard(showCard)}}\n                okText=\"确认\"\n                cancelText=\"取消\"\n              >\n                <CloseCircleFilled\n                  style={{ color: \"red\" }}\n                />\n              </Popconfirm>\n            </div>\n            <div className=\"cardHeader\">\n              <span className=\"title\">{showCard.title}</span>\n              <span className=\"type\">\n                <span\n                  style={{\n                    background: \"#1890ff\",\n                    color: \"#ffffff\",\n                    padding: \"0px 3px\",\n                  }}\n                >\n                  {showCard.type}\n                </span>\n                {(showCard.tags || []).map((tag) => (\n                  <span\n                    key={tag}\n                    style={{\n                      background: \"#20A162\",\n                      color: \"#ffffff\",\n                      marginLeft: \"5px\",\n                      padding: \"0px 3px\",\n                    }}\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </span>\n            </div>\n            <div className=\"cardContent\">\n              {contentShow ? (\n                <span className=\"content\">\n                  <div\n                    className=\"braft-output-content\"\n                    dangerouslySetInnerHTML={{ __html: showCard.content }}\n                  />\n                </span>\n              ) : (\n                <div className=\"btnBox\">\n                  <Button\n                    type=\"link\"\n                    onClick={() => {\n                      setContentShow(true);\n                    }}\n                  >\n                    显示内容\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div\n            className=\"typeBtnBox\"\n            style={{\n              justifyContent:\n                activeKey == \"search\" ? \"flex-end\" : \"space-between\",\n            }}\n          >\n            {activeKey != \"search\" ? (\n              <>\n                <Button\n                  icon={<FastBackwardFilled />}\n                  onClick={() => {\n                    changeIndex(false, true);\n                  }}\n                >\n                  开头\n                </Button>\n                <Button\n                  icon={<CaretLeftFilled />}\n                  onClick={() => {\n                    changeIndex(false, false);\n                  }}\n                >\n                  前一张（左键）\n                </Button>\n                <span style={{ lineHeight: \"32px\", fontWeight: \"bold\" }}>\n                  ({showIndex + 1}/{showCards.length})\n                </span>\n                <Button\n                  icon={<CaretRightFilled />}\n                  onClick={() => {\n                    changeIndex(true, false);\n                  }}\n                >\n                  后一张（右键）\n                </Button>\n                <Button\n                  icon={<FastForwardFilled />}\n                  onClick={() => {\n                    changeIndex(true, true);\n                  }}\n                >\n                  结尾\n                </Button>\n              </>\n            ) : (\n              \"\"\n            )}\n            <AddCard />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <Result icon={<BlockOutlined />} title=\"暂无卡片\" extra={<AddCard noBlock />} />,\n        </div>\n      )}\n    </div>\n  );\n};\n","let ls = window.localStorage;\n\nfunction get(key) {\n  if (!key) {\n    return;\n  }\n  let result = ls.getItem(key);\n  try {\n    if (result) {\n      result = JSON.parse(result);\n    }\n  } catch (e) {}\n  return result;\n}\n\nfunction set(key, value) {\n  if (!key) {\n    return;\n  }\n  if (value && typeof value === \"object\") {\n    value = JSON.stringify(value);\n  }\n  ls.setItem(key, value);\n}\n\nfunction remove(key) {\n  if (!key) {\n    return;\n  }\n  ls.removeItem(key);\n}\n\nexport default { get, set, remove };\n","import React, { useContext, useEffect } from \"react\";\nimport { Menu, Input } from \"antd\";\nimport AppContext from \"../AppContext\";\n\nexport default (props) => {\n  const { searchSelectId, setSearchSelectId, showMenus } = useContext(\n    AppContext\n  );\n\n  const { setSearchText } = useContext(AppContext);\n\n  useEffect(() => {\n    if (searchSelectId) {\n      let inTag = false;\n      showMenus.some((menu) => {\n        if (menu.key === searchSelectId) {\n          inTag = true;\n          return true;\n        }\n      });\n      if (!inTag) {\n        setSearchSelectId(null);\n      }\n    } else {\n      if (showMenus.length) {\n        setSearchSelectId(showMenus[0].key);\n      }\n    }\n  }, [showMenus]);\n\n  return (\n    <>\n      <Input.Search\n        size=\"small\"\n        style={{ margin: \"10px 0px\" }}\n        placeholder=\"请输入待搜索标题\"\n        onSearch={(value) => setSearchText(value)}\n        enterButton\n      />\n      <Menu\n        mode=\"inline\"\n        selectedKeys={[searchSelectId]}\n        style={{ height: \"100%\", borderRight: 0 }}\n        onClick={({ key }) => {\n          setSearchSelectId(key);\n        }}\n      >\n        {showMenus.length ? (\n          <>\n            {showMenus.map((menu) => (\n              <Menu.Item\n                key={menu.key}\n                style={{ height: \"24px\", lineHeight: \"24px\" }}\n              >\n                {menu.value}\n              </Menu.Item>\n            ))}\n          </>\n        ) : (\n          <div style={{ textAlign: \"center\",marginTop:\"20px\", color: \"#999999\" }}>\n            无匹配卡片\n          </div>\n        )}\n      </Menu>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Menu } from \"antd\";\nimport AppContext from \"../AppContext\";\n\nexport default (props) => {\n  const { selectTag, setSelectTag, showMenus } = useContext(AppContext);\n\n  return (\n    <Menu\n      mode=\"inline\"\n      selectedKeys={[selectTag]}\n      style={{ height: \"100%\", borderRight: 0 }}\n      onClick={({ key }) => {\n        setSelectTag(key);\n      }}\n    >\n      <div style={{ textAlign: \"center\", marginTop: \"20px\",marginBottom: \"20px\", color: \"#999999\" }}>\n        使用上、下键以快速切换\n      </div>\n      {showMenus.map((menu) => (\n        <Menu.Item\n          key={menu.key}\n          style={{ height: \"24px\", lineHeight: \"24px\" }}\n        >{`${menu.key} (${menu.total})`}</Menu.Item>\n      ))}\n    </Menu>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Row, Col, Avatar } from \"antd\";\nimport AppContext from \"../AppContext\";\nimport { WechatOutlined, ZhihuOutlined } from \"@ant-design/icons\";\n\nconst UtilItem = (props) => {\n  const { color, url, name, openWebview } = props;\n\n  return (\n    <div\n      className=\"utilItem\"\n      onClick={() => {\n        if (url) {\n          let target = url;\n          if (url.substring(0, 4) !== \"http\") {\n            target = \"http://\" + target;\n          }\n          openWebview({name, url: target});\n          // let targetName = name + (Math.random()*1000000).toFixed(0);\n          // window.open(target, targetName, 'height=800, width=1300');\n        }\n      }}\n    >\n      <Avatar\n        size={64}\n        style={{ margin: \"0 auto\", backgroundColor: color || \"#1890ff\" }}\n      >\n        {name}\n      </Avatar>\n    </div>\n  );\n};\n\nexport default () => {\n  const { utils, openWebview } = useContext(AppContext);\n\n  return (\n    <div style={{ height: \"100%\", padding: \"10px\" }}>\n      <Row>\n        {utils.length ? (\n          <>\n            {utils.map((util) => (\n              <Col span={12}>\n                <UtilItem {...util} openWebview={openWebview}/>\n              </Col>\n            ))}\n          </>\n        ) : (\n          <div\n            style={{\n              textAlign: \"center\",\n              marginTop: \"20px\",\n              width: \"100%\",\n              color: \"#999999\",\n            }}\n          >\n            暂无可用工具\n          </div>\n        )}\n      </Row>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Result, Button, Modal, Space, Form, Input, Select } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined ,AppstoreOutlined} from \"@ant-design/icons\";\nimport AppContext from \"../AppContext\";\n\nconst colorOptions = [\n  {\n    value: \"#1890ff\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#1890ff\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#ED5A65\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#ED5A65\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#EC7696\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#EC7696\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#AD6598\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#AD6598\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#815C94\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#815C94\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#1BA784\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#1BA784\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#96C24E\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#96C24E\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#FFC90C\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#FFC90C\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#FFA60F\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#FFA60F\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#F97D1C\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#F97D1C\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#603D30\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#603D30\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n  {\n    value: \"#847C74\",\n    label: (\n      <div\n        style={{\n          width: \"80px\",\n          height: \"16px\",\n          background: \"#847C74\",\n          marginTop: \"3px\",\n        }}\n      ></div>\n    ),\n  },\n];\n\nexport default () => {\n  const [modalShow, setModalShow] = useState(false);\n  const { utils, saveUtils } = useContext(AppContext);\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (modalShow) {\n      form.resetFields();\n    }\n  }, [modalShow]);\n\n  const onStateOk = () => {\n    form\n      .validateFields()\n      .then(() => {\n        const newData = form.getFieldsValue();\n        saveUtils(newData);\n        setModalShow(false);\n      })\n      .catch(() => {});\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div>\n        <Result\n          icon={<AppstoreOutlined />}\n          title=\"点击菜单栏工具以跳转\"\n          extra={[\n            <Button\n              type=\"primary\"\n              key=\"console\"\n              onClick={() => setModalShow(true)}\n            >\n              工具管理\n            </Button>,\n          ]}\n        />\n      </div>\n      <Modal\n        title={\"工具管理\"}\n        visible={modalShow}\n        onOk={onStateOk}\n        onCancel={() => setModalShow(false)}\n        forceRender\n        style={{ width: \"100%\", height: \"100%\" }}\n      >\n        <Form\n          className=\"utilManage\"\n          initialValues={{\n            utils: utils,\n          }}\n          size=\"small\"\n          form={form}\n        >\n          <Form.List name=\"utils\">\n            {(fields, { add, remove }) => {\n              return (\n                <div style={{ height: \"420px\" }}>\n                  <div style={{ maxHeight: \"370px\", overflowY: \"auto\" }}>\n                    {fields.map((field) => (\n                      <Space\n                        key={field.key}\n                        style={{ display: \"flex\" }}\n                        align=\"start\"\n                      >\n                        <Form.Item\n                          {...field}\n                          label=\"工具名称\"\n                          name={[field.name, \"name\"]}\n                          fieldKey={[field.fieldKey, \"name\"]}\n                          rules={[{ required: true, message: \"不可为空\" }]}\n                        >\n                          <Input\n                            style={{ width: \"120px\" }}\n                            placeholder=\"请输入\"\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          {...field}\n                          label=\"链接地址\"\n                          name={[field.name, \"url\"]}\n                          fieldKey={[field.fieldKey, \"url\"]}\n                          rules={[{ required: true, message: \"不可为空\" }]}\n                        >\n                          <Input\n                            style={{ width: \"320px\" }}\n                            placeholder=\"请输入\"\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          {...field}\n                          label=\"图标颜色\"\n                          name={[field.name, \"color\"]}\n                          fieldKey={[field.fieldKey, \"color\"]}\n                        >\n                          <Select\n                            style={{ width: \"120px\" }}\n                            placeholder=\"请选择\"\n                            options={colorOptions}\n                          />\n                        </Form.Item>\n\n                        <MinusCircleOutlined\n                          onClick={() => {\n                            remove(field.name);\n                          }}\n                        />\n                      </Space>\n                    ))}\n                  </div>\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => {\n                        add();\n                      }}\n                      block\n                    >\n                      <PlusOutlined /> 新增工具\n                    </Button>\n                  </Form.Item>\n                </div>\n              );\n            }}\n          </Form.List>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport \"./App.css\";\n\nimport { ipcRenderer } from \"electron\";\n//const {ipcRenderer} = window.require('electron');\n\nimport { Button, Layout, Tabs } from \"antd\";\nimport TypeMenu from \"./components/TypeMenu\";\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\nimport TypeCard from \"./components/TypeCard\";\nimport AddCard from \"./components/AddCard\";\nimport AppContext from \"./AppContext\";\nimport lsApi from \"./localStorageUtil\";\nimport uuid from \"uuidjs\";\nimport SearchMenu from \"./components/SearchMenu\";\nimport TagMenu from \"./components/TagMenu\";\nimport UtilMenu from \"./components/UtilMenu\";\nimport UtilManage from \"./components/UtilManage\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction App() {\n  const [collapsed, setCollapsed] = useState(false);\n  const [data, setData] = useState({ types: [], tags: [], cards: [] });\n  const [utils, setUtils] = useState([]);\n\n  const [activeKey, setActiveKey] = useState(\"type\");\n  const [selectType, setSelectType] = useState(\"全部\");\n  const [selectTag, setSelectTag] = useState(\"全部\");\n  const [searchText, setSearchText] = useState(null);\n  const [searchSelectId, setSearchSelectId] = useState(null);\n\n  useEffect(() => {\n    // lsApi.remove(\"cardData2\");\n    let dataResult = lsApi.get(\"cardData2\");\n    if (dataResult) {\n      setData(dataResult);\n    }\n    let utilResult = lsApi.get(\"utilData2\");\n    if (utilResult) {\n      setUtils(utilResult);\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   if (activeKey === \"type\") {\n  //     setSelectType(\"全部\");\n  //   } else if (activeKey === \"tag\") {\n  //     setSelectTag(\"全部\");\n  //   } else if (activeKey === \"search\") {\n  //     setSearchText(null);\n  //     setSearchSelectId(null);\n  //   }\n  // }, [activeKey]);\n\n  const addCard = (card) => {\n    let newData = { ...data };\n    let type = card.type;\n    card.id = uuid.genV1().toString();\n    if (newData.types.indexOf(type) === -1) {\n      newData.types.push(type);\n    }\n    if (card.tags) {\n      card.tags.map((tag) => {\n        if (newData.tags.indexOf(tag) === -1) {\n          newData.tags.push(tag);\n        }\n      });\n    }\n    newData.cards.push({ ...card });\n    lsApi.set(\"cardData2\", newData);\n    setData(newData);\n  };\n\n  const editCard = (card) => {\n    let newData = { ...data };\n    let id = card.id;\n    let oldType = card.oldType;\n    let oldTags = [...(card.oldTags || [])];\n    newData.cards.some((oldCard) => {\n      if (oldCard.id === id) {\n        oldCard.title = card.title;\n        oldCard.type = card.type;\n        oldCard.tags = card.tags;\n        if (card.tags) {\n          card.tags.map((tag) => {\n            if (newData.tags.indexOf(tag) === -1) {\n              newData.tags.push(tag);\n            }\n          });\n        }\n        oldCard.content = card.content;\n        return true;\n      }\n    });\n    let typeInTag = false;\n    newData.cards.some((item) => {\n      if (item.type === oldType) {\n        typeInTag = true;\n        return true;\n      }\n    });\n    if (!typeInTag) {\n      let removeIndex = newData.types.indexOf(oldType);\n      if (removeIndex > -1) {\n        newData.types.splice(removeIndex, 1);\n      }\n    }\n    if (oldTags) {\n      oldTags.map((oldTag) => {\n        let tagInTag = false;\n        newData.cards.some((item) => {\n          if (item.tags && item.tags.indexOf(oldTag) > -1) {\n            tagInTag = true;\n            return true;\n          }\n        });\n        if (!tagInTag) {\n          let removeIndex = newData.tags.indexOf(oldTag);\n          if (removeIndex > -1) {\n            newData.tags.splice(removeIndex, 1);\n          }\n        }\n      });\n    }\n    lsApi.set(\"cardData2\", newData);\n    setData(newData);\n  };\n\n  const removeCard = (card) => {\n    let newData = { ...data };\n    let type = card.type;\n    let tags = [...(card.tags || [])];\n    let cards = newData.cards;\n    let removeCardIndex = -1;\n    cards.some((item, index) => {\n      if (item.id === card.id) {\n        removeCardIndex = index;\n        return true;\n      }\n    });\n    if (removeCardIndex > -1) {\n      cards.splice(removeCardIndex, 1);\n      let typeInTag = false;\n      cards.map((item) => {\n        if (item.type === type) {\n          typeInTag = true;\n          return true;\n        }\n      });\n      if (!typeInTag) {\n        let removeTypeIndex = newData.types.indexOf(type);\n        if (removeTypeIndex > -1) {\n          newData.types.splice(removeTypeIndex, 1);\n        }\n        setSelectType(\"全部\");\n      }\n\n      if (tags) {\n        tags.map((oldTag) => {\n          let tagInTag = false;\n          newData.cards.some((item) => {\n            if (item.tags && item.tags.indexOf(oldTag) > -1) {\n              tagInTag = true;\n              return true;\n            }\n          });\n          if (!tagInTag) {\n            let removeIndex = newData.tags.indexOf(oldTag);\n            if (removeIndex > -1) {\n              newData.tags.splice(removeIndex, 1);\n            }\n          }\n        });\n        setSelectTag(\"全部\");\n      }\n    }\n    lsApi.set(\"cardData2\", newData);\n    setData(newData);\n  };\n\n  let showCards = useMemo(() => {\n    let targetCards = [];\n    let { types, tags, cards } = data;\n    if (activeKey === \"type\") {\n      if (selectType === \"全部\") {\n        targetCards = [...cards];\n      } else {\n        cards.map((item) => {\n          if (item.type === selectType) {\n            targetCards.push(item);\n          }\n        });\n      }\n    } else if (activeKey === \"tag\") {\n      if (selectTag === \"全部\") {\n        targetCards = [...cards];\n      } else {\n        cards.map((item) => {\n          if (item.tags && item.tags.indexOf(selectTag) > -1) {\n            targetCards.push(item);\n          }\n        });\n      }\n    } else if (activeKey === \"search\") {\n      if (searchSelectId) {\n        cards.some((item) => {\n          if (item.id === searchSelectId) {\n            targetCards.push(item);\n            return true;\n          }\n        });\n      }\n    }\n    return targetCards;\n  }, [data, activeKey, selectType, selectTag, searchText, searchSelectId]);\n\n  let showMenus = useMemo(() => {\n    let menus = [];\n    let { types, tags, cards } = data;\n    if (activeKey === \"type\") {\n      if (types.length) {\n        let typeTotal = {};\n        types.map((type) => {\n          typeTotal[type] = 0;\n        });\n        cards.map((item) => {\n          if (typeof typeTotal[item.type] === \"number\") {\n            typeTotal[item.type]++;\n          }\n        });\n        types.map((type) => {\n          menus.push({ key: type, total: typeTotal[type] });\n        });\n      }\n      menus.unshift({ key: \"全部\", total: cards.length });\n    } else if (activeKey === \"tag\") {\n      if (tags.length) {\n        let tagTotal = {};\n        tags.map((tag) => {\n          tagTotal[tag] = 0;\n        });\n        cards.map((item) => {\n          if (item.tags) {\n            item.tags.map((tag) => {\n              if (typeof tagTotal[tag] === \"number\") {\n                tagTotal[tag]++;\n              }\n            });\n          }\n        });\n        tags.map((tag) => {\n          menus.push({ key: tag, total: tagTotal[tag] });\n        });\n      }\n      menus.unshift({ key: \"全部\", total: cards.length });\n    } else if (activeKey === \"search\") {\n      if (searchText) {\n        cards.map((item) => {\n          if (item.title.indexOf(searchText) > -1) {\n            var texts = item.title.split(searchText);\n            menus.unshift({\n              key: item.id,\n              value: (\n                <span>\n                  {texts.map((text, index) => {\n                    if (index === texts.length - 1) {\n                      return text;\n                    } else {\n                      return (\n                        <>\n                          {text}\n                          <span style={{ color: \"#1890ff\" }}>{searchText}</span>\n                        </>\n                      );\n                    }\n                  })}\n                </span>\n              ),\n            });\n          }\n        });\n      }\n    }\n    return menus;\n  }, [data, activeKey, searchText]);\n\n  let changeMenus = (isNext) => {\n    if (activeKey === \"type\") {\n      let targetIndex = -1;\n      showMenus.some((menu, index) => {\n        if (menu.key === selectType) {\n          targetIndex = index;\n          return true;\n        }\n      });\n      if (targetIndex > -1) {\n        if (isNext) {\n          targetIndex++;\n          targetIndex = targetIndex % showMenus.length;\n        } else {\n          targetIndex--;\n          if (targetIndex < 0) {\n            targetIndex += showMenus.length;\n          }\n        }\n        setSelectType(showMenus[targetIndex].key);\n      }\n    } else if (activeKey === \"tag\") {\n      let targetIndex = -1;\n      showMenus.some((menu, index) => {\n        if (menu.key === selectTag) {\n          targetIndex = index;\n          return true;\n        }\n      });\n      if (targetIndex > -1) {\n        if (isNext) {\n          targetIndex++;\n          targetIndex = targetIndex % showMenus.length;\n        } else {\n          targetIndex--;\n          if (targetIndex < 0) {\n            targetIndex += showMenus.length;\n          }\n        }\n        setSelectTag(showMenus[targetIndex].key);\n      }\n    } else if (activeKey === \"search\") {\n      let targetIndex = -1;\n      showMenus.some((menu, index) => {\n        if (menu.key === searchSelectId) {\n          targetIndex = index;\n          return true;\n        }\n      });\n      if (targetIndex > -1) {\n        if (isNext) {\n          targetIndex++;\n          targetIndex = targetIndex % showMenus.length;\n        } else {\n          targetIndex--;\n          if (targetIndex < 0) {\n            targetIndex += showMenus.length;\n          }\n        }\n        setSearchSelectId(showMenus[targetIndex].key);\n      }\n    }\n  };\n\n  const saveUtils = ({utils})=>{\n    lsApi.set(\"utilData2\", utils);\n    setUtils(utils);\n  }\n\n  const openWebview = (webviewInfo) =>{\n    lsApi.set(\"webviewInfo\", webviewInfo);\n    ipcRenderer.send(\"open-webview\");\n  }\n\n  let contextValue = {\n    selectType,\n    setSelectType,\n    selectTag,\n    setSelectTag,\n    searchText,\n    setSearchText,\n    searchSelectId,\n    setSearchSelectId,\n    activeKey,\n\n    types: data.types,\n    tags: data.tags,\n    showCards,\n    showMenus,\n    utils,\n\n    addCard,\n    editCard,\n    removeCard,\n    changeMenus,\n    saveUtils,\n    openWebview,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      <div className=\"App\">\n        <Layout style={{ height: \"100%\" }}>\n          <Sider\n            collapsed={collapsed}\n            collapsedWidth=\"0\"\n            className=\"rollingBox\"\n            width={200}\n            style={{\n              height: \"100%\",\n              background: \"#ffffff\",\n              overflow: \"hidden\",\n            }}\n          >\n            <Tabs\n              activeKey={activeKey}\n              type=\"card\"\n              size=\"small\"\n              onChange={setActiveKey}\n            >\n              <Tabs.TabPane tab=\"分类\" key=\"type\">\n                <div\n                  style={{ height: \"calc(100vh - 34px)\", padding: \"0px 10px\" }}\n                  className=\"rollingBox\"\n                >\n                  <TypeMenu />\n                </div>\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"标签\" key=\"tag\">\n                <div\n                  style={{ height: \"calc(100vh - 34px)\", padding: \"0px 10px\" }}\n                  className=\"rollingBox\"\n                >\n                  <TagMenu />\n                </div>\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"查询\" key=\"search\">\n                <div\n                  style={{ height: \"calc(100vh - 34px)\", padding: \"0px 10px\" }}\n                  className=\"rollingBox\"\n                >\n                  <SearchMenu />\n                </div>\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"工具\" key=\"util\">\n                <div\n                  style={{ height: \"calc(100vh - 34px)\", padding: \"0px 10px\" }}\n                  className=\"rollingBox\"\n                >\n                  <UtilMenu />\n                </div>\n              </Tabs.TabPane>\n            </Tabs>\n          </Sider>\n          <Layout>\n            <Content style={{ position: \"relative\" }}>\n              <div className=\"collapsedBtn\">\n                <UnorderedListOutlined\n                  onClick={() => {\n                    setCollapsed((collapsed) => !!!collapsed);\n                  }}\n                />\n              </div>\n              {activeKey === \"util\" ? <UtilManage /> : <TypeCard />}\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}